<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>holysll</title>
  
  <subtitle>彼岸花开</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-12T16:10:59.762Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>holysll</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo使用教程与常用命令</title>
    <link href="http://yoursite.com/2020/05/12/hexo%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2020/05/12/hexo%E7%AE%80%E4%BB%8B/</id>
    <published>2020-05-12T15:34:02.000Z</published>
    <updated>2020-05-12T16:10:59.762Z</updated>
    
    <content type="html"><![CDATA[<pre><code>欢迎使用[Hexo](https://hexo.io/)! 更多信息可以查看[Hexo官方文档](https://hexo.io/docs/) 。</code></pre><p>如果你在使用过程中遇到任何问题，可以在这<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">提问</a><br>或者在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a> 给我留言。<br>    这篇文章简单介绍下Hexo的使用以及常用的命令。<br>``    </p><a id="more"></a>  <h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><h3 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"文章标题"</span></span><br><span class="line">或者</span><br><span class="line">$ hexo n <span class="string">"文章标题"</span></span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">或者</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">或者</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远端"><a href="#部署到远端" class="headerlink" title="部署到远端"></a>部署到远端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">或者</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>更多信息:: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><h3 id="获取主题"><a href="#获取主题" class="headerlink" title="获取主题"></a>获取主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/holysll/hexo-theme-ayer</span><br></pre></td></tr></table></figure><h3 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">vi _config.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: hexo-theme-ayer</span><br></pre></td></tr></table></figure><h3 id="清除缓存并部署"><a href="#清除缓存并部署" class="headerlink" title="清除缓存并部署"></a>清除缓存并部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;欢迎使用[Hexo](https://hexo.io/)! 更多信息可以查看[Hexo官方文档](https://hexo.io/docs/) 。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你在使用过程中遇到任何问题，可以在这&lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;提问&lt;/a&gt;&lt;br&gt;或者在&lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt; 给我留言。&lt;br&gt;    这篇文章简单介绍下Hexo的使用以及常用的命令。&lt;br&gt;``    &lt;/p&gt;
    
    </summary>
    
    
      <category term="个人博客" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Python语言知识点</title>
    <link href="http://yoursite.com/2020/05/12/Python%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/05/12/Python%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</id>
    <published>2020-05-12T15:05:08.000Z</published>
    <updated>2020-05-12T15:41:50.606Z</updated>
    
    <content type="html"><![CDATA[<pre><code>本文主要对python语言基础知识进行梳理、回顾，把一些需要记住的概念原理，和容易混淆，生涩的知识点进行归纳。</code></pre><p>``</p><h2 id="1-Python语言的特性"><a href="#1-Python语言的特性" class="headerlink" title="1.Python语言的特性"></a>1.Python语言的特性</h2><p>   Python是一种解释型语言，不需要再运行之前进行编译。<br>   Python是一种动态语言，不需要声明变量的类型。<br>   python适合面向对象编程，允许类的定义以及组合和继承。  </p><a id="more"></a>   <h2 id="2-Python的函数参数传递"><a href="#2-Python的函数参数传递" class="headerlink" title="2.Python的函数参数传递"></a>2.Python的函数参数传递</h2><p>看两个例子:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(a)</span>:</span></span><br><span class="line">    a = <span class="number">2</span></span><br><span class="line">fun(a)</span><br><span class="line"><span class="keyword">print</span> a  <span class="comment"># 1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(a)</span>:</span></span><br><span class="line">    a.append(<span class="number">1</span>)</span><br><span class="line">fun(a)</span><br><span class="line"><span class="keyword">print</span> a  <span class="comment"># [1]</span></span><br></pre></td></tr></table></figure><h2 id="3-python中的元类metaclass"><a href="#3-python中的元类metaclass" class="headerlink" title="3.python中的元类metaclass"></a>3.python中的元类metaclass</h2><h2 id="4-staticmethod和classmethod"><a href="#4-staticmethod和classmethod" class="headerlink" title="4.staticmethod和classmethod"></a>4.staticmethod和classmethod</h2><h2 id="5-单例模式"><a href="#5-单例模式" class="headerlink" title="5.单例模式"></a>5.单例模式</h2><ul><li>使用<code>__new__</code>方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> hasattr(cls, <span class="string">'_instance'</span>):</span><br><span class="line">            orig = super(Singleton, cls)</span><br><span class="line">            cls._instance = orig.__new__(cls, *args, **kw)</span><br><span class="line">        <span class="keyword">return</span> cls._instance</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span><span class="params">(Singleton)</span>:</span></span><br><span class="line">    a = <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>共享属性</li></ul><p>创建实例时把所有实例的<code>__dict__</code>指向同一个字典,这样它们具有相同的属性和方法.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Borg</span><span class="params">(object)</span>:</span></span><br><span class="line">    _state = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kw)</span>:</span></span><br><span class="line">        ob = super(Borg, cls).__new__(cls, *args, **kw)</span><br><span class="line">        ob.__dict__ = cls._state</span><br><span class="line">        <span class="keyword">return</span> ob</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span><span class="params">(Borg)</span>:</span></span><br><span class="line">    a = <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>装饰器版本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleton</span><span class="params">(cls)</span>:</span></span><br><span class="line">    instances = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getinstance</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> instances:</span><br><span class="line">            instances[cls] = cls(*args, **kw)</span><br><span class="line">        <span class="keyword">return</span> instances[cls]</span><br><span class="line">    <span class="keyword">return</span> getinstance</span><br><span class="line"></span><br><span class="line"><span class="meta">@singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><ul><li>import方法</li></ul><p>作为python的模块是天然的单例模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysingleton.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">My_Singleton</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">my_singleton = My_Singleton()</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use</span></span><br><span class="line"><span class="keyword">from</span> mysingleton <span class="keyword">import</span> my_singleton</span><br><span class="line"></span><br><span class="line">my_singleton.foo()</span><br></pre></td></tr></table></figure><p><strong><a href="http://python.jobbole.com/87294/" target="_blank" rel="noopener">单例模式伯乐在线详细解释</a></strong></p><h2 id="6-python常用库"><a href="#6-python常用库" class="headerlink" title="6.python常用库"></a>6.python常用库</h2><h3 id="1-标准库"><a href="#1-标准库" class="headerlink" title="1 标准库"></a>1 标准库</h3><p><strong><a href="https://www.cnblogs.com/haochengdu/p/8855028.html" target="_blank" rel="noopener">网友总结参考</a></strong><br><strong><a href="https://docs.python.org/zh-cn/3.8/library/index.html" target="_blank" rel="noopener">官网中文参考</a></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">os：提供了不少于操作系统相关联的函数  </span><br><span class="line"></span><br><span class="line">sys：通常用于命令行参数</span><br><span class="line"></span><br><span class="line">res：正则表达式操作</span><br><span class="line"></span><br><span class="line">math：数学运算</span><br><span class="line"></span><br><span class="line">decimal：十进制定点和浮点运算</span><br><span class="line"></span><br><span class="line">datetime：日期时间</span><br><span class="line"></span><br><span class="line">collections：容器数据类型</span><br><span class="line"></span><br><span class="line">json：JSON 编码和解码器</span><br><span class="line"></span><br><span class="line">base64：Base16, Base32, Base64, Base85 数据编码</span><br><span class="line"></span><br><span class="line">heapq：堆队列算法</span><br><span class="line"></span><br><span class="line">copy：复制</span><br><span class="line"></span><br><span class="line">threading：基于线程的并行</span><br><span class="line"></span><br><span class="line">multiprocessing：基于进程的并行</span><br><span class="line"></span><br><span class="line">subprocess：子进程管理</span><br><span class="line"></span><br><span class="line">queue：一个同步的队列类</span><br><span class="line"></span><br><span class="line">random：生成伪随机数</span><br><span class="line"></span><br><span class="line">pprint：数据美化输出</span><br><span class="line"></span><br><span class="line">itertools：为高效循环而创建迭代器的函数</span><br><span class="line"></span><br><span class="line">functools：高阶函数和可调用对象上的操作</span><br><span class="line"></span><br><span class="line">operator：标准运算符替代函数</span><br><span class="line"></span><br><span class="line">logging：Python 的日志记录工具</span><br><span class="line"></span><br><span class="line">hashlib：安全哈希与消息摘要</span><br><span class="line"></span><br><span class="line">pickle：Python 对象序列化</span><br><span class="line"></span><br><span class="line">html.parser：简单的 HTML 和 XHTML 解析器</span><br><span class="line"></span><br><span class="line">urllib：URL 处理模块</span><br><span class="line"></span><br><span class="line">traceback：打印或检索堆栈回溯</span><br><span class="line"></span><br><span class="line">__future__：Future 语句定义</span><br><span class="line"></span><br><span class="line">gc：垃圾回收器接口</span><br></pre></td></tr></table></figure><h3 id="2-科学计算与数据分析库"><a href="#2-科学计算与数据分析库" class="headerlink" title="2.科学计算与数据分析库"></a>2.科学计算与数据分析库</h3><blockquote><p>numpy：科学计算包，支持N维数组运算、处理大型矩阵、成熟的广播函数库、矢量运算、线性代数、傅里叶变换、随机数生成，并可与C++/Fortran语言无缝结合。</p></blockquote><blockquote><p>scipy：建立在NumPy基础上，它是离散傅立叶变换、线性代数、优化和稀疏矩阵等多种高级科学和工程模块最有用的库之一。</p></blockquote><blockquote><p>pandas：主要用于结构化数据的运算和操作，广泛用于数据整理和预处理，其有助于提高Python在数据科学社区的使用。 </p></blockquote><blockquote><p>matplotlib：主要用于绘制各种各样的图形，从直方图到线图、热力图，还可以使用Latex命令在图像中添加数学符号。</p></blockquote><blockquote><p>Scikit：主要用于机器学习，该库建立在NumPy、SciPy和matplotlib基础上，包含许多有效的机器学习和统计建模工具，如分类、回归、聚类和降维。 </p></blockquote><blockquote><p>Statsmodels：用于统计建模，是一个Python中提供用户探索数据、估计统计模型和执行统计测试的模组。可用于不同类型数据的描述性统计，统计测试，绘<br>图功能和结果统计。</p></blockquote><blockquote><p>Seaborn：用于数据可视化，是一个用于在Python中制作有吸引力和翔实的统计图形库。它是基于matplotlib。Seaborn旨在使可视化成为探索和理解数据的核心组成。  </p></blockquote><blockquote><p>Bokeh：用于在现代网络浏览器上创建交互式图表，仪表盘和数据应用程序。它赋予用户以D3.js的风格生成优雅简洁的图形。此外，它具有超大型或流式数据集的高性能交互能力。 </p></blockquote><blockquote><p>Blaze: 将Numpy和Pandas的能力扩展到分布式和流式传输数据集。它可以用于从众多来源包括Bcolz，MongDB,SQLAlchemy,Apache Spark,PyTables等访问数据，与Bokeh一起，可以作为在矩形数据模块上创建有效可视化和仪表盘的强大的工具。</p></blockquote><blockquote><p>Sympy：用于符号计算，具有从基本算数符号到微积分、袋鼠、离散数学和量子物理学的广泛能力，另一个有用的功能是将计算结果格式化为LaTeX代码。   </p></blockquote><h3 id="3-第三方库"><a href="#3-第三方库" class="headerlink" title="3.第三方库"></a>3.第三方库</h3><blockquote><p>pymysqldb：是在 Python2.x 版本中用于连接 MySQL 服务器的一个库，导包：import MySQLdb。</p></blockquote><blockquote><p>PyMySQL：是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，导包：import pymysql，当要向下兼容python2时,可以加上：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个连接对象，再使用创建游标</span></span><br><span class="line">con = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, port=<span class="number">3306</span>, user=<span class="string">'root'</span>, passwd=<span class="string">'1234'</span>, db=<span class="string">'mysql'</span>)</span><br><span class="line">cursor = con.cursor()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 执行一个SQL语句</span></span><br><span class="line">sql = <span class="string">"select * from user"</span></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 从游标中取出所有记录放到一个序列中并关闭游标</span></span><br><span class="line">result = cursor.fetchall()</span><br><span class="line">print(result)</span><br><span class="line">cursor.close()</span><br></pre></td></tr></table></figure><blockquote><p>djano：是一个高层次的web开发框架，特点是开发快、代码少。可扩展性强。采用MTV（Model、Template、View）模型组织资源，框架功能丰富，模板扩展选择最多。</p></blockquote><blockquote><p>flask： 是一个web开发的微框架，严格来说，它仅仅提供web服务器支持，不提供全栈开发支持。然而，Flask非常轻量、非常简单，特别适合小微原型系统的开发，耗时少，开发效率高。  </p></blockquote><blockquote><p>Tornado：是一个基于异步网络功能库的Web开发框架，能够支持几万个开放连接，Web服务比较稳定。比较适合高并发场景下的Web系统，如秒杀系统、抢票系统等，灵活性较差。   </p></blockquote><blockquote><p>Falcon：是一个支持大规模微服务API或移动App后端响应的web开发框架，它完全基于python并提供了非常高性能、可靠性和可扩展性。 </p></blockquote><blockquote><p>Pyramid：是一个扩展性很强且灵活的web开发框架，上手十分容易，比较适合中等规模且边开发边设计的场景。它不提供绝对严格的框架定义，根据需求可以扩展开发，对高阶程序员十分友好。   </p></blockquote><blockquote><p>Quart：是面向ASGI(异步服务器网关接口)开发的web为框架，采用Flask兼容的API接口，提供非常轻量级的开发方式。</p></blockquote><blockquote><p>requests：用于Web访问，类似于python标准库的urllib2，更容易更方便上手，适合初学者。   </p></blockquote><blockquote><p>scrapy： 用于网络爬虫，它是获取特定模式数据的非常有用的框架，从网站首页URL开始,然后挖掘网站内的网页内容来手机信息。 </p></blockquote><blockquote><p>selenium：是一个用于测试网站的自动化工具，支持Chrome、Firefox、Safari等主流界面浏览器，同时也支持PhantomJS无界面浏览器。 </p></blockquote><blockquote><p>celery：是一个由python编写的简单、灵活、可靠的用于处理大量信息的分布式系统，它同时提供操作和维护分布式所需的工具，专注于实时任务，支持任务调度。是一个分布式队列管理工具，可以用celery提供接口快速实现并管理一个分布式任务队列。</p></blockquote><h2 id="7-python中的类型转换"><a href="#7-python中的类型转换" class="headerlink" title="7 python中的类型转换"></a>7 python中的类型转换</h2><table><thead><tr><th>函数</th><th>作用</th><th></th><th>函数</th><th>作用</th><th></th><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>int()</td><td>转整型</td><td></td><td>list()</td><td>转列表</td><td></td><td>bin()</td><td>整数转2进制</td></tr><tr><td>float()</td><td>转浮点型</td><td></td><td>dict()</td><td>转字典</td><td></td><td>oct()</td><td>整数转6进制</td></tr><tr><td>str()</td><td>转字符串</td><td></td><td>set()</td><td>转集合</td><td></td><td>hex()</td><td>整数转16进制</td></tr><tr><td>ord()</td><td>字符转整数</td><td></td><td>tuple()</td><td>转元组</td><td></td><td>complex()</td><td>实数转复数</td></tr></tbody></table><h2 id="8-文件流操作"><a href="#8-文件流操作" class="headerlink" title="8 文件流操作"></a>8 文件流操作</h2><h3 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">'file_name'</span>, <span class="string">'file_type'</span>)</span><br><span class="line"><span class="keyword">if</span> f:  <span class="comment"># 判断文件是否打开</span></span><br><span class="line">file_type</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'file_name'</span>, <span class="string">'file_type'</span>) <span class="keyword">as</span> f:</span><br></pre></td></tr></table></figure><h3 id="访问模式"><a href="#访问模式" class="headerlink" title="访问模式"></a>访问模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">w: 只写</span><br><span class="line"></span><br><span class="line">r：只读</span><br><span class="line"></span><br><span class="line">a: 追加写入</span><br><span class="line">rb: 二进制只读</span><br><span class="line"></span><br><span class="line">wb：二进制写入</span><br><span class="line"></span><br><span class="line">ab：二进制追加写入</span><br><span class="line"></span><br><span class="line">r+：打开一个文件用于读写，文件指针将会放在文件的开头。</span><br><span class="line"></span><br><span class="line">w+：打开一个文件用于读写，如果文件已经存在则将其覆盖，如果文件不存在，则创建新文件。</span><br><span class="line"></span><br><span class="line">a+：打开一个文件用于读写，追加模式。如果文件存在，文件指针将会放在文件的结尾；如果该文件不存在，穿件新文件用于读写。</span><br><span class="line"></span><br><span class="line">rb+: 以二进制格式打开一个文件用于读写，文件指正将会放在文件的开头，一般用于非文本文件如图片等。</span><br><span class="line"></span><br><span class="line">wb+:以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件，一般用于非文本文件如图片等。</span><br><span class="line"></span><br><span class="line">ab+:以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾；如果文件不存在，创建新文件用于读写。</span><br></pre></td></tr></table></figure><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f.write(content)  <span class="comment"># 打开文件后，将制定内容写入文件中</span></span><br></pre></td></tr></table></figure><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f.read(lenth)  <span class="comment"># 使用read可以从文件中读取制定长度的数据，并将指针移到这条数据之后。如果为空，则默认读取全部数据。</span></span><br><span class="line"></span><br><span class="line">f.readline()  <span class="comment"># 读取文件中一行数据的信息，指针移动到下一行。</span></span><br><span class="line"></span><br><span class="line">f.readlines() <span class="comment"># 读取整个文件的数据信息，返回一个列表，列表中每个元素为一行数据信息。</span></span><br></pre></td></tr></table></figure><h3 id="查看指针位置"><a href="#查看指针位置" class="headerlink" title="查看指针位置"></a>查看指针位置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f.tell()  <span class="comment"># 查看单签位置，就是指针对应的位置</span></span><br></pre></td></tr></table></figure><h3 id="指针定位"><a href="#指针定位" class="headerlink" title="指针定位"></a>指针定位</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">seek(offset, <span class="keyword">from</span>)  <span class="comment"># 将指针定位到某个位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span>: 方向，<span class="number">0</span>表示文件开头；<span class="number">1</span>表示文件当前位置；<span class="number">2</span>表示文件的末尾</span><br><span class="line">offset: 偏移量</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">  f.seek(<span class="number">5</span>,<span class="number">0</span>)  <span class="comment"># 文件开头，向后偏移5个位置</span></span><br><span class="line">  f.seek(<span class="number">-3</span>,<span class="number">2</span>)  <span class="comment"># 文件结尾，向前偏移3个位置</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;本文主要对python语言基础知识进行梳理、回顾，把一些需要记住的概念原理，和容易混淆，生涩的知识点进行归纳。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;``&lt;/p&gt;
&lt;h2 id=&quot;1-Python语言的特性&quot;&gt;&lt;a href=&quot;#1-Python语言的特性&quot; class=&quot;headerlink&quot; title=&quot;1.Python语言的特性&quot;&gt;&lt;/a&gt;1.Python语言的特性&lt;/h2&gt;&lt;p&gt;   Python是一种解释型语言，不需要再运行之前进行编译。&lt;br&gt;   Python是一种动态语言，不需要声明变量的类型。&lt;br&gt;   python适合面向对象编程，允许类的定义以及组合和继承。  &lt;/p&gt;
    
    </summary>
    
    
      <category term="编程语言-python" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="知识回顾" scheme="http://yoursite.com/tags/%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/"/>
    
  </entry>
  
  <entry>
    <title>自然语言处理</title>
    <link href="http://yoursite.com/2020/05/12/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2020/05/12/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/</id>
    <published>2020-05-11T17:24:07.393Z</published>
    <updated>2020-05-11T17:22:25.974Z</updated>
    
    <content type="html"><![CDATA[<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again --><p><strong>自然语言处理</strong></p><ul><li><a href="#文本分析">文本挖掘</a></li><li><a href="#情感分析">情感分析</a></li></ul><!-- markdown-toc end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;自然语言处理&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a hr
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>机器学习知识</title>
    <link href="http://yoursite.com/2020/05/12/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2020/05/12/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86/</id>
    <published>2020-05-11T17:24:04.142Z</published>
    <updated>2020-05-11T17:22:25.971Z</updated>
    
    <content type="html"><![CDATA[<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again --><p><strong>机器学习</strong></p><ul><li><a href="#机器学习基础">机器学习基础</a><ul><li><a href="#1-机器学习概述">1 机器学习概述</a></li><li><a href="#2-监督学习">2 监督学习</a></li><li><a href="#3-非监督学习">3 非监督学习</a></li><li><a href="#4-增强学习">4 增强学习</a></li><li><a href="#5-深度学习">5 深度学习</a></li></ul></li><li><a href="#分类问题">分类问题</a><ul><li><a href="#1-KNN">1 KNN</a></li><li><a href="#2-NB">2 NB</a></li><li><a href="#3-SVM">3 SVM</a></li><li><a href="#4-AdaBoost">4 AdaBoost</a></li><li><a href="#5-DT">5 DT</a></li></ul></li><li><a href="#聚类分析">聚类分析</a><ul><li><a href="#1-K-means">1 K-means</a></li><li><a href="#2-DBSCAN">2 DBSCAN</a></li><li><a href="#3-LDA">3 LDA</a></li></ul></li><li><a href="#预测分析">预测分析</a><ul><li><a href="#1-时间序列">1 时间序列</a></li><li><a href="#2-BP神经网络">2 BP神经网络</a></li></ul></li><li><a href="#关联分析">关联分析</a><ul><li><a href="#1-Apriori">1 Apriori</a></li><li><a href="#2-FP-Growth">2 FP-Growth</a></li></ul></li><li><a href="#回归分析">回归分析</a><ul><li><a href="#1-一元回归">1 一元回归</a></li><li><a href="#2-多元回归">2 多元回归</a></li><li><a href="#3-逻辑回归">3 逻辑回归</a></li></ul></li><li><a href="#集成学习">集成学习</a><ul><li><a href="#1-Bagging">1 Bagging</a></li><li><a href="#2-随机森林">2 随机森林</a></li><li><a href="#3-Boosting">3 Boosting</a></li><li><a href="#4-AdaBoost">4 AdaBoost</a></li></ul></li><li><a href="#深度学习">深度学习</a><ul><li><a href="#1-有监督">1 有监督</a></li><li><a href="#2-无监督">2 无监督</a></li><li><a href="#3-TensorFlow">3 TensorFlow</a></li><li><a href="#4-Theano">4 Theano</a></li></ul></li><li><a href="#数据预处理">数据预处理</a><ul><li><a href="#1-数据清洗">1 数据清洗</a><ul><li><a href="#1-异常值处理">1 异常值处理</a></li><li><a href="#2-缺失值处理">2 缺失值处理</a></li><li><a href="#3-噪声处理">3 噪声处理</a></li><li><a href="#4-倾斜数据处理">4 倾斜数据处理</a></li></ul></li><li><a href="#2-数据集成">2 数据集成</a></li><li><a href="#3-数据变换">3 数据变换</a></li><li><a href="#4-数据归约">4 数据归约</a></li></ul></li><li><a href="#数据降维">数据降维</a><ul><li><a href="#1-PCA">1 主成份分析</a></li><li><a href="#2-奇异值分解">2 奇异值分解</a></li></ul></li></ul><!-- markdown-toc end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;机器学习&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="http://yoursite.com/2020/05/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2020/05/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-05-11T17:24:01.774Z</published>
    <updated>2020-05-11T17:22:25.969Z</updated>
    
    <content type="html"><![CDATA[<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again --><p><strong>数据结构</strong></p><ul><li><a href="#数据结构">数据结构</a><ul><li><a href="#1-字符串(String)">1 字符串(String)</a></li><li><a href="#2-数组(Array)">2 数组(Array)</a></li><li><a href="#3-堆(Heap)">3 堆(Heap)</a></li><li><a href="#4-栈(Stack)">4 栈(Stack)</a></li><li><a href="#5-队列(Queue)">5 队列(Queue)</a></li><li><a href="#6-链表(Linked-List)">6 链表(Linked-List)</a></li><li><a href="#7-树(Tree)">7 树(Tree)</a></li><li><a href="#8-图(Graph)">8 图(Graph)</a></li><li><a href="#9-哈希表(Hash)">9 哈希表(Hash)</a></li></ul></li></ul><!-- markdown-toc end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Web与前端</title>
    <link href="http://yoursite.com/2020/05/12/Web%E4%B8%8E%E5%89%8D%E7%AB%AF/"/>
    <id>http://yoursite.com/2020/05/12/Web%E4%B8%8E%E5%89%8D%E7%AB%AF/</id>
    <published>2020-05-11T17:23:58.331Z</published>
    <updated>2020-05-11T17:22:25.964Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前端知识</strong></p><ul><li><a href="#Web基础">Web基础</a><ul><li><a href="#1-常用的网络传输协议">1.常用的网络传输协议</a></li><li><a href="#2-常见的状态码">2.常见的状态码</a></li><li><a href="#3-三次握手">3.三次握手</a></li><li><a href="#4-四次挥手">4.四次挥手</a></li></ul></li><li><a href="#Django">Django</a></li><li><a href="#Flask">Flask</a></li><li><a href="#Vue">Vue</a></li><li><a href="#AngularJS">AngularJS</a></li><li><a href="#React">React</a></li><li><a href="#jQuery">jQuery</a></li></ul><h1 id="Web基础"><a href="#Web基础" class="headerlink" title="Web基础"></a>Web基础</h1><h2 id="1-常用的网络传输协议"><a href="#1-常用的网络传输协议" class="headerlink" title="1 常用的网络传输协议"></a>1 常用的网络传输协议</h2><ul><li>TCP：传输控制协议，可靠传输，面向连接</li><li>UDP：用户数据包协议，不可靠传输，面向无连接</li><li>FTP：文件传输协议,用于上传和下载文件</li><li>HTTP：超文本传输协议，基于TCP/IP通信协议，面向对象</li><li>SMTP：邮件传输协议</li><li>TELNET：Internet远程登录服务的标准协议和主要方式</li><li>DNS：域名系统，将域名解析为ip地址</li></ul><h2 id="2-常见的状态码"><a href="#2-常见的状态码" class="headerlink" title="2 常见的状态码"></a>2 常见的状态码</h2><table><thead><tr><th align="center">状态码</th><th align="left">状态</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">200</td><td align="left">Ok</td><td align="left">请求成功</td></tr><tr><td align="center">400</td><td align="left">Bad Request</td><td align="left">请求语法错误，不能被服务器解析</td></tr><tr><td align="center">401</td><td align="left">Unauthorized</td><td align="left">未经授权，需与www-Authenticate一起用</td></tr><tr><td align="center">403</td><td align="left">Forbidden</td><td align="left">服务器收到请求，但拒绝提供服务</td></tr><tr><td align="center">404</td><td align="left">Not Found</td><td align="left">请求资源不存在</td></tr><tr><td align="center">500</td><td align="left">Internal Server Error</td><td align="left">服务器发生不可预期的错误</td></tr><tr><td align="center">503</td><td align="left">Server Unavailable</td><td align="left">服务器当前请求不可用</td></tr></tbody></table><h2 id="3-三次握手"><a href="#3-三次握手" class="headerlink" title="3 三次握手"></a>3 三次握手</h2><ul><li>第一次握手：建立连接时，客户端发送SYN（SYN=x）到服务器，有主动打开状态进入SYN_SENT状态，等待服务器确认。</li><li>第二次握手：服务器收到SYN包，必须确认客户的SYN（ack=x+1）,同时自己也发送一个SYN包（syn=y），即SYN+ACK包，服务器进入SYN_RECV状态。</li><li>第三次握手：客户端收到服务器的SYN+ACK包，想服务器发送确认ACK包（ACK=y+1）,发送完毕，客户端和服务器进入ESTABLISHED状态，完成握手。</li></ul><h2 id="4-四次挥手"><a href="#4-四次挥手" class="headerlink" title="4 四次挥手"></a>4 四次挥手</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;前端知识&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Web基础&quot;&gt;Web基础&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-常用的网络传输协议&quot;&gt;1.常用的网络传输协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-常见的状态码&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>操作系统知识</title>
    <link href="http://yoursite.com/2020/05/12/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2020/05/12/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86/</id>
    <published>2020-05-11T17:23:53.592Z</published>
    <updated>2020-05-11T17:22:25.966Z</updated>
    
    <content type="html"><![CDATA[<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again --><p><strong>操作系统</strong></p><ul><li><a href="#操作系统">操作系统</a><ul><li><a href="#1-selectpoll和epoll">1 select,poll和epoll</a></li><li><a href="#2-调度算法">2 调度算法</a></li><li><a href="#3-死锁">3 死锁</a></li></ul></li><li><a href="#Linux">Linux</a><ul><li><a href="#1-linux常用命令">2 linux常用命令</a></li></ul></li></ul><!-- markdown-toc end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>算法与编程</title>
    <link href="http://yoursite.com/2020/05/12/%E7%AE%97%E6%B3%95%E4%B8%8E%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/05/12/%E7%AE%97%E6%B3%95%E4%B8%8E%E7%BC%96%E7%A8%8B/</id>
    <published>2020-05-11T17:23:49.950Z</published>
    <updated>2020-05-11T17:22:25.972Z</updated>
    
    <content type="html"><![CDATA[<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again --><p><strong>算法编程</strong></p><ul><li><a href="#算法编程">算法编程</a><ul><li><a href="#1-反转链表">1 反转链表</a></li><li><a href="#2-DFS">2 DFS</a></li><li><a href="#3-BFS">3 BFS</a></li><li><a href="#4-二分查找">4 二分查找</a></li><li><a href="#5-快排">5 快排</a></li><li><a href="#6-求最大树深">6 求最大树深</a></li><li><a href="#9-动态规划问题">7 动态规划问题</a></li><li><a href="#10-01背包问题">8 01背包问题</a></li></ul></li></ul><!-- markdown-toc end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;算法编程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库知识</title>
    <link href="http://yoursite.com/2020/05/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2020/05/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9F%A5%E8%AF%86/</id>
    <published>2020-05-11T17:23:25.257Z</published>
    <updated>2020-05-11T17:22:25.967Z</updated>
    
    <content type="html"><![CDATA[<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again --><p><strong>数据库知识</strong></p><ul><li><a href="#数据库常识">数据库常识</a></li><li><a href="#Mysql数据库">Mysql数据库</a></li><li><a href="#Redis数据库">Redis数据库</a></li><li><a href="#MongoDB数据库">MongoDB数据库</a></li></ul><!-- markdown-toc end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-generate-toc again --&gt;
&lt;p&gt;&lt;strong&gt;数据库知识&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a hre
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
